{"version":3,"sources":["App.module.scss","components/Styles.module.scss","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-reducer.js","redux/store.js","redux/contacts/contacts-selectors.js","components/ContactForm.js","components/Filter.js","components/ContactList .js","App.js","index.js"],"names":["module","exports","changeFilter","createAction","axios","defaults","baseURL","fetchContacts","createAsyncThunk","_","a","rejectWithValue","get","data","addNewContact","name","phone","post","deleteContact","contactId","delete","id","items","createReducer","operations","fulfilled","payload","state","filter","contact","loading","pending","rejected","error","combineReducers","store","configureStore","reducer","contacts","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","getLoading","getFilter","getAllContacts","getVisibleContacts","allContacts","normalizedFilter","toLowerCase","includes","ContactForm","useState","setName","setPhone","useSelector","dispatch","useDispatch","uuidv4","phoneId","handleChange","e","target","value","reset","onSubmit","preventDefault","find","repeatName","ContactOperations","alert","className","s","form","htmlFor","formLabel","type","pattern","title","required","inputWindow","onChange","btn","filterId","Filter","contactsSelectors","filterBox","filterLabel","filterInput","placeholder","ContactList","isLoading","useEffect","contactsOperations","length","contactList","map","listItem","onClick","App","section","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84ffc05f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__qZJjv\",\"section\":\"App_section__1L9NU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Styles_form__1n-MI\",\"formLabel\":\"Styles_formLabel__3EqA7\",\"inputWindow\":\"Styles_inputWindow__hvDpK\",\"filterBox\":\"Styles_filterBox__2XrpD\",\"filterInput\":\"Styles_filterInput__3ItDz\",\"contactList\":\"Styles_contactList__1lttY\",\"listItem\":\"Styles_listItem__rN4qw\",\"btn\":\"Styles_btn__1ntXU\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst changeFilter = createAction('contacts/filter');\nexport default changeFilter;\n","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'https://61980945164fa60017c22f32.mockapi.io';\r\nexport const fetchContacts = createAsyncThunk(\r\n  'contacts/fetchContacts',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.get('/contacts');\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const addNewContact = createAsyncThunk(\r\n  'contacts/addNewContact',\r\n  async ({ name, phone }, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.post('/contacts', { name, phone });\r\n      return data;\r\n    } catch (error) {\r\n      rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async (contactId, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.delete(`/contacts/${contactId}`);\r\n      return data.id;\r\n    } catch (error) {\r\n      rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  fetchContacts,\r\n  addNewContact,\r\n  deleteContact,\r\n};\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport changeFilter from './contacts-actions';\nimport operations from './contacts-operations';\n\nconst items = createReducer([], {\n  [operations.fetchContacts.fulfilled]: (_, { payload }) => payload,\n  [operations.addNewContact.fulfilled]: (state, { payload }) => [\n    ...state,\n    payload,\n  ],\n  [operations.deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [operations.fetchContacts.pending]: () => true,\n  [operations.fetchContacts.fulfilled]: () => false,\n  [operations.fetchContacts.rejected]: () => false,\n  [operations.addNewContact.pending]: () => true,\n  [operations.addNewContact.fulfilled]: () => false,\n  [operations.addNewContact.rejected]: () => false,\n  [operations.deleteContact.pending]: () => true,\n  [operations.deleteContact.fulfilled]: () => false,\n  [operations.deleteContact.rejected]: () => false,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","export const getLoading = state => state.contacts.loading;\r\n\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getAllContacts = state => state.contacts.items;\r\n\r\nexport const getVisibleContacts = state => {\r\n  const allContacts = getAllContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return allContacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactOperations from '../redux/contacts/contacts-operations';\nimport { getAllContacts } from '../redux/contacts/contacts-selectors';\nimport s from './Styles.module.scss';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const items = useSelector(getAllContacts);\n  const dispatch = useDispatch();\n  const contactId = uuidv4();\n  const phoneId = uuidv4();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'phone':\n        setPhone(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const repeatName = name =>\n      items.find(contact => contact.name.toLowerCase() === name.toLowerCase());\n\n    if (repeatName(name)) {\n      alert(`${name} is already in contacts`);\n    } else {\n      dispatch(ContactOperations.addNewContact({ name, phone }));\n    }\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className={s.form}>\n        <label htmlFor={contactId} className={s.formLabel}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            className={s.inputWindow}\n            value={name}\n            onChange={handleChange}\n            id={contactId}\n          />\n        </label>\n        <label htmlFor={phoneId} className={s.formLabel}>\n          Phone\n          <input\n            type=\"tel\"\n            name=\"phone\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            className={s.inputWindow}\n            value={phone}\n            onChange={handleChange}\n            id={phoneId}\n          />\n        </label>\n        <button type=\"submit\" title=\"Добавить контакт\" className={s.btn}>\n          Add contact\n        </button>\n      </div>\n    </form>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { contactsSelectors, changeFilter } from '../redux/contacts';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './Styles.module.scss';\n\nconst filterId = uuidv4();\n\nexport default function Filter() {\n  const value = useSelector(contactsSelectors.getFilter);\n  const dispatch = useDispatch();\n  return (\n    <div className={s.filterBox}>\n      <label htmlFor={filterId} className={s.filterLabel}>\n        <input\n          type=\"text\"\n          className={s.filterInput}\n          id={filterId}\n          placeholder=\"Find contacts by name\"\n          value={value}\n          onChange={e => dispatch(changeFilter(e.target.value))}\n        ></input>\n      </label>\n    </div>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from '../redux/contacts';\nimport s from './Styles.module.scss';\nimport { useEffect } from 'react';\n\nexport default function ContactList() {\n  const contacts = useSelector(contactsSelectors.getVisibleContacts);\n  const dispatch = useDispatch();\n  const isLoading = useSelector(contactsSelectors.getLoading);\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoading && <h1>Loading...</h1>}\n      {contacts.length > 0 && (\n        <ul className={s.contactList}>\n          {contacts.map(({ id, name, phone }) => (\n            <li key={id} className={s.listItem}>\n              <p>\n                {name}: {phone}\n              </p>\n              <button\n                type=\"button\"\n                onClick={() => dispatch(contactsOperations.deleteContact(id))}\n                className={s.btn}\n                title=\"Удалить контакт\"\n              >\n                Delete\n              </button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n","import s from './App.module.scss';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList ';\n\nexport default function App() {\n  return (\n    <div className={s.section}>\n      <h2 className={s.title}>Phonebook</h2>\n      <ContactForm />\n      <h2 className={s.title}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      {/* <BrowserRouter> */}\n      <App />\n      {/* </BrowserRouter> */}\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}