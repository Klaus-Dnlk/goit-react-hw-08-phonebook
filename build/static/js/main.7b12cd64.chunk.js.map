{"version":3,"sources":["App.module.scss","components/Styles.module.scss","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/ContactForm.js","components/Filter.js","components/ContactList .js","App.js","index.js"],"names":["module","exports","addNewContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","items","createReducer","actions","state","find","e","toLowerCase","alert","filter","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReducer","devTools","process","persistor","persistStore","connect","dispatch","newContact","useState","setName","setNumber","contactId","phoneId","handleChange","target","value","reset","onSubmit","preventDefault","className","s","form","htmlFor","formLabel","type","pattern","title","required","inputWindow","onChange","btn","filterId","contactsActions","filterBox","filterLabel","filterInput","placeholder","getVisibleContacts","allContacts","normalizedFilter","contact","includes","contactList","map","listItem","onClick","App","section","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,MAAQ,mBAAmB,QAAU,uB,kBCAvDD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,UAAY,0BAA0B,YAAc,4BAA4B,UAAY,0BAA0B,YAAc,4BAA4B,YAAc,4BAA4B,SAAW,yBAAyB,IAAM,sB,uLCanR,GAAEC,cAXKC,YAAa,gBAAgB,SAACC,EAAMC,GAAP,MAAmB,CACpEC,QAAS,CACPF,OACAC,SACAE,GAAIC,mBAOwBC,cAHVN,YAAa,mBAGYO,aAF1BP,YAAa,oBCR5BQ,EAAQC,YACZ,CACE,CAAEL,GAAI,OAAQH,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEE,GAAI,OAAQH,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEE,GAAI,OAAQH,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEE,GAAI,OAAQH,KAAM,iBAAkBC,OAAQ,eALvB,mBAStBQ,EAAQX,eAAgB,SAACY,EAAD,OAAUR,EAAV,EAAUA,QAAV,OACvBQ,EAAMC,MAAK,SAAAC,GAAC,OAAIA,EAAEZ,KAAKa,gBAAkBX,EAAQF,KAAKa,iBAClDC,MAAM,GAAD,OAAIZ,EAAQF,KAAZ,4BADT,sBAEQU,GAFR,CAEeR,OAZM,cAatBO,EAAQJ,eAAgB,SAACK,EAAD,OAAUR,EAAV,EAAUA,QAAV,OACvBQ,EAAMK,QAAO,qBAAGZ,KAAgBD,QAdX,IAkBrBa,EAASP,YAAc,GAAD,eACzBC,EAAQH,cAAe,SAACU,EAAD,YAAMd,YAGjBe,cAAgB,CAC7BV,QACAQ,W,iBCbIG,EAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHhD,CAMdC,MAGIC,EAAiB,CACrBC,IAAK,WACLC,YACAC,UAAW,CAAC,WAGRC,EAAQC,YAAe,CAC3BC,QAAS,CACPC,SAAUC,YAAeR,EAAgBS,IAE3CpB,aACAqB,UAAUC,IAKG,GAAEP,QAAOQ,UAFNC,YAAaT,I,wDCwC/B,IAQeU,eARS,SAAAjC,GAAK,MAAK,CAChCH,MAAOG,EAAM0B,SAAS7B,UAGG,SAAAqC,GAAQ,MAAK,CACtCC,WAAY,SAAC7C,EAAMC,GAAP,OAAkB2C,EAASnC,EAAQX,cAAcE,EAAMC,QAGtD0C,EAhFf,YAAsC,IAAfE,EAAc,EAAdA,WACrB,EAAwBC,mBAAS,IAAjC,mBAAO9C,EAAP,KAAa+C,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAO7C,EAAP,KAAe+C,EAAf,KAEMC,EAAY7C,cACZ8C,EAAU9C,cAEV+C,EAAe,SAAAvC,GACnB,MAAwBA,EAAEwC,OAAlBpD,EAAR,EAAQA,KAAMqD,EAAd,EAAcA,MAEd,OAAQrD,GACN,IAAK,OACH+C,EAAQM,GACR,MACF,IAAK,SACHL,EAAUK,GACV,MACF,QACE,SAUAC,EAAQ,WACZP,EAAQ,IACRC,EAAU,KAGZ,OACE,sBAAMO,SAZa,SAAA3C,GACnBA,EAAE4C,iBACFX,EAAW7C,EAAMC,GACjBqD,KASA,SACE,sBAAKG,UAAWC,IAAEC,KAAlB,UACE,wBAAOC,QAASX,EAAWQ,UAAWC,IAAEG,UAAxC,iBAEE,uBACEC,KAAK,OACL9D,KAAK,OACL+D,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRR,UAAWC,IAAEQ,YACbb,MAAOrD,EACPmE,SAAUhB,EACVhD,GAAI8C,OAGR,wBAAOW,QAASV,EAASO,UAAWC,IAAEG,UAAtC,kBAEE,uBACEC,KAAK,MACL9D,KAAK,SACL+D,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRR,UAAWC,IAAEQ,YACbb,MAAOpD,EACPkE,SAAUhB,EACVhD,GAAI+C,OAGR,wBAAQY,KAAK,SAASE,MAAM,8FAAmBP,UAAWC,IAAEU,IAA5D,iCChEFC,EAAWjE,cAwBjB,IAQeuC,eARS,SAAAjC,GAAK,MAAK,CAChC2C,MAAO3C,EAAM0B,SAASrB,WAGG,SAAA6B,GAAQ,MAAK,CACtCuB,SAAU,SAAAvD,GAAC,OAAIgC,EAAS0B,EAAgBhE,aAAaM,EAAEwC,OAAOC,YAGjDV,EA9Bf,YAAsC,IAApBU,EAAmB,EAAnBA,MAAOc,EAAY,EAAZA,SACvB,OACE,qBAAKV,UAAWC,IAAEa,UAAlB,SACE,uBAAOX,QAASS,EAAUZ,UAAWC,IAAEc,YAAvC,SACE,uBACEV,KAAK,OACLL,UAAWC,IAAEe,YACbtE,GAAIkE,EACJK,YAAY,wBACZrB,MAAOA,EACPc,SAAUA,WCapB,IAAMQ,EAAqB,SAACC,EAAa7D,GACvC,IAAM8D,EAAmB9D,EAAOF,cAChC,OAAO+D,EAAY7D,QAAO,SAAA+D,GAAO,OAC/BA,EAAQ9E,KAAKa,cAAckE,SAASF,OAYzBlC,eARS,SAAC,GAAD,QAAGP,SAAY7B,EAAf,EAAeA,MAAOQ,EAAtB,EAAsBA,OAAtB,MAAsC,CAC5DqB,SAAUuC,EAAmBpE,EAAOQ,OAGX,SAAA6B,GAAQ,MAAK,CACtCvC,cAAe,SAAAF,GAAE,OAAIyC,EAASnC,EAAQJ,cAAcF,QAGvCwC,EAzCf,YAAmD,IAA5BP,EAA2B,EAA3BA,SAAU/B,EAAiB,EAAjBA,cAC/B,OACE,oBAAIoD,UAAWC,IAAEsB,YAAjB,SACG5C,EAAS6C,KAAI,gBAAG9E,EAAH,EAAGA,GAAIH,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,qBAAawD,UAAWC,IAAEwB,SAA1B,UACE,8BACGlF,EADH,KACWC,KAEX,wBACEkF,QAAS,kBAAM9E,EAAcF,IAC7BsD,UAAWC,IAAEU,IACbJ,MAAM,wFAHR,sBAJO7D,WCJF,SAASiF,IACtB,OACE,sBAAK3B,UAAWC,IAAE2B,QAAlB,UACE,oBAAI5B,UAAWC,IAAEM,MAAjB,uBACA,cAAC,EAAD,IACA,oBAAIP,UAAWC,IAAEM,MAAjB,sBACA,cAAC,EAAD,IACA,cAAC,EAAD,OCHNsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUvD,MAAOA,EAAMA,MAAvB,SACE,cAAC,IAAD,CAAawD,QAAS,KAAMhD,UAAWR,EAAMQ,UAA7C,SACE,cAAC,IAAD,UACE,cAAC2C,EAAD,YAKRM,SAASC,eAAe,W","file":"static/js/main.7b12cd64.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__2tro0\",\"section\":\"App_section__3-Gs0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Styles_form__2l8xt\",\"formLabel\":\"Styles_formLabel__1EAjW\",\"inputWindow\":\"Styles_inputWindow__3UisN\",\"filterBox\":\"Styles_filterBox__ZLGqB\",\"filterInput\":\"Styles_filterInput___T2kw\",\"contactList\":\"Styles_contactList__12ZdO\",\"listItem\":\"Styles_listItem__1jBtj\",\"btn\":\"Styles_btn__20x5-\"};","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst addNewContact = createAction('contacts/add', (name, number) => ({\n  payload: {\n    name,\n    number,\n    id: uuidv4(),\n  },\n}));\n\nconst deleteContact = createAction('contacts/delete');\nconst changeFilter = createAction('contacts/filter');\n\nexport default { addNewContact, deleteContact, changeFilter };\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\n\nconst items = createReducer(\n  [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ],\n\n  {\n    [actions.addNewContact]: (state, { payload }) =>\n      state.find(e => e.name.toLowerCase() === payload.name.toLowerCase())\n        ? alert(`${payload.name} is already in contacts`)\n        : [...state, payload],\n    [actions.deleteContact]: (state, { payload }) =>\n      state.filter(({ id }) => id !== payload),\n  },\n);\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport contactsReducer from './contacts/contacts-reducer';\nimport storage from 'redux-persist/lib/storage';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst contactsConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport actions from '../redux/contacts/contacts-actions';\nimport s from './Styles.module.scss';\n\nfunction ContactForm({ newContact }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contactId = uuidv4();\n  const phoneId = uuidv4();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    newContact(name, number);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className={s.form}>\n        <label htmlFor={contactId} className={s.formLabel}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            className={s.inputWindow}\n            value={name}\n            onChange={handleChange}\n            id={contactId}\n          />\n        </label>\n        <label htmlFor={phoneId} className={s.formLabel}>\n          Phone\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            className={s.inputWindow}\n            value={number}\n            onChange={handleChange}\n            id={phoneId}\n          />\n        </label>\n        <button type=\"submit\" title=\"Добавить контакт\" className={s.btn}>\n          Add contact\n        </button>\n      </div>\n    </form>\n  );\n}\n\nconst mapStateToProps = state => ({\n  items: state.contacts.items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  newContact: (name, number) => dispatch(actions.addNewContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport contactsActions from '../redux/contacts/contacts-actions';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './Styles.module.scss';\n\nconst filterId = uuidv4();\n\nfunction Filter({ value, onChange }) {\n  return (\n    <div className={s.filterBox}>\n      <label htmlFor={filterId} className={s.filterLabel}>\n        <input\n          type=\"text\"\n          className={s.filterInput}\n          id={filterId}\n          placeholder=\"Find contacts by name\"\n          value={value}\n          onChange={onChange}\n        ></input>\n      </label>\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(contactsActions.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport actions from '../redux/contacts/contacts-actions';\nimport s from './Styles.module.scss';\n\nfunction ContactList({ contacts, deleteContact }) {\n  return (\n    <ul className={s.contactList}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.listItem}>\n          <p>\n            {name}: {number}\n          </p>\n          <button\n            onClick={() => deleteContact(id)}\n            className={s.btn}\n            title=\"Удалить контакт\"\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  deleteContact: PropTypes.func,\n};\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return allContacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getVisibleContacts(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteContact: id => dispatch(actions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import s from './App.module.scss';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList ';\n\nexport default function App() {\n  return (\n    <div className={s.section}>\n      <h2 className={s.title}>Phonebook</h2>\n      <ContactForm />\n      <h2 className={s.title}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}