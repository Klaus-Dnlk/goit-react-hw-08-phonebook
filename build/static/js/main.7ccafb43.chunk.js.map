{"version":3,"sources":["components/Styles.module.scss","views/views.module.scss","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/auth/auth-slice.js","redux/store.js","components/Container.js","components/Navigation.js","components/AuthNav.js","components/UserMenu.js","components/AppBar.js","views/HomeView.js","views/RegisterView.js","views/LoginView.js","components/ContactForm.js","components/Filter.js","components/ContactList .js","views/ContactsView.js","App.js","index.js"],"names":["module","exports","axios","defaults","baseURL","fetchContacts","createAsyncThunk","_","a","rejectWithValue","get","data","addNewContact","name","phone","post","deleteContact","contactId","delete","id","getLoading","state","contacts","loading","getFilter","filter","getAllContacts","items","getVisibleContacts","allContacts","normalizedFilter","toLowerCase","contact","includes","changeFilter","createAction","createReducer","operations","fulfilled","payload","pending","rejected","error","combineReducers","register","credentials","authSelectors","getIsLoggedIn","auth","isLoggedIn","getUsername","user","authSlice","createSlice","initialState","email","token","extraReducers","authOperations","action","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contactsReducer","devTools","process","persistor","persistStore","Container","children","Navigation","to","exact","className","s","link","activeClassName","activeLink","AuthNav","UserMenu","dispatch","useDispatch","useSelector","user_container","user_name","type","onClick","logOut","AppBar","section","title","HomeView","RegisterView","useState","setName","setEmail","password","setPassword","handleChange","target","value","onSubmit","e","preventDefault","user_form","autoComplete","user_label","onChange","LoginView","logIn","style","ContactForm","setPhone","uuidv4","phoneId","reset","find","repeatName","ContactOperations","alert","contact_form","htmlFor","formLabel","pattern","required","inputWindow","contact_formLabel","btn","filterId","Filter","contactsSelectors","filterBox","filterLabel","filterInput","placeholder","ContactList","isLoading","useEffect","contactsOperations","length","contactList","map","listItem","App","path","component","ContactsView","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ccafb43.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Styles_title__2O54i\",\"section\":\"Styles_section__3hTyO\",\"contact_form\":\"Styles_contact_form__mmTsL\",\"contact_formLabel\":\"Styles_contact_formLabel__1v9Pz\",\"inputWindow\":\"Styles_inputWindow__3UisN\",\"filterBox\":\"Styles_filterBox__ZLGqB\",\"filterInput\":\"Styles_filterInput___T2kw\",\"contactList\":\"Styles_contactList__12ZdO\",\"listItem\":\"Styles_listItem__1jBtj\",\"btn\":\"Styles_btn__20x5-\",\"link\":\"Styles_link__26V-S\",\"activeLink\":\"Styles_activeLink__13zUj\",\"user_container\":\"Styles_user_container__3xVOA\",\"user_name\":\"Styles_user_name__1SET3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"views_title__-fH05\",\"section\":\"views_section__3B5U0\",\"user_form\":\"views_user_form__1oKyX\",\"user_label\":\"views_user_label__6dQ5A\"};","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'https://61980945164fa60017c22f32.mockapi.io';\r\nexport const fetchContacts = createAsyncThunk(\r\n  'contacts/fetchContacts',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.get('/contacts');\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const addNewContact = createAsyncThunk(\r\n  'contacts/addNewContact',\r\n  async ({ name, phone }, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.post('/contacts', { name, phone });\r\n      return data;\r\n    } catch (error) {\r\n      rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async (contactId, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.delete(`/contacts/${contactId}`);\r\n      return data.id;\r\n    } catch (error) {\r\n      rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  fetchContacts,\r\n  addNewContact,\r\n  deleteContact,\r\n};\r\n","export const getLoading = state => state.contacts.loading;\r\n\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getAllContacts = state => state.contacts.items;\r\n\r\nexport const getVisibleContacts = state => {\r\n  const allContacts = getAllContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return allContacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n","import { createAction } from '@reduxjs/toolkit';\n\nconst changeFilter = createAction('contacts/filter');\nexport default changeFilter;\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport changeFilter from './contacts-actions';\nimport operations from './contacts-operations';\n\nconst items = createReducer([], {\n  [operations.fetchContacts.fulfilled]: (_, { payload }) => payload,\n  [operations.addNewContact.fulfilled]: (state, { payload }) => [\n    ...state,\n    payload,\n  ],\n  [operations.deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [operations.fetchContacts.pending]: () => true,\n  [operations.fetchContacts.fulfilled]: () => false,\n  [operations.fetchContacts.rejected]: () => false,\n  [operations.addNewContact.pending]: () => true,\n  [operations.addNewContact.fulfilled]: () => false,\n  [operations.addNewContact.rejected]: () => false,\n  [operations.deleteContact.pending]: () => true,\n  [operations.deleteContact.fulfilled]: () => false,\n  [operations.deleteContact.rejected]: () => false,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst register = createAsyncThunk('auth/register', async credentials => {\r\n  try {\r\n    const { data } = await axios.post('/users/signup', credentials);\r\n    return data;\r\n  } catch (error) {}\r\n});\r\n\r\n// const token = {\r\n//     set(token) {\r\n//         axios.defaults.headers.common.Authorization = `Bearer ${token}`\r\n//     }\r\n//     unset() {\r\n//         axios.defaults.headers.common.Authorization = '';\r\n//     }\r\n// }\r\n\r\n/* POST registration */\r\n\r\n/* POST */\r\n\r\n// const logIn = createAsyncThunk('auth/login', async credentilas => {\r\n//     try {\r\n//         const {data} = await.post('user/login', credentials);\r\n//         token.set(data.token)\r\n//         return\r\n//     } catch (error) {\r\n\r\n//     }\r\n// })\r\n\r\n/* GET */\r\n\r\n// const fetchCurrentUser = createAsyncThunk(\r\n//     'auth/refresh',\r\n//     async(_, thunkAPI) => {\r\n//         const state = thunkAPI.getState()\r\n//         const persistedToken = state.auth.token;\r\n\r\n//     }\r\n\r\nconst operations = {\r\n  register,\r\n};\r\n\r\nexport default operations;\r\n","const getIsLoggedIn = state => state.auth.isLoggedIn;\r\nconst getUsername = state => state.auth.user.name;\r\nconst authSelectors = {\r\n  getIsLoggedIn,\r\n  getUsername,\r\n};\r\n\r\nexport default authSelectors;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { authOperations } from '.';\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: {\r\n    [authOperations.register.fulfilled](state, action) {},\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { contactsReducer } from './contacts';\nimport { authReducer } from './auth';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","export default function Container({ children }) {\r\n  return <div>{children}</div>;\r\n}\r\n","import { NavLink } from 'react-router-dom';\r\nimport s from './Styles.module.scss';\r\n\r\nexport default function Navigation() {\r\n  return (\r\n    <nav>\r\n      <NavLink to=\"/\" exact className={s.link} activeClassName={s.activeLink}>\r\n        Home\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        to=\"/contacts\"\r\n        exact\r\n        className={s.link}\r\n        activeClassName={s.activeLink}\r\n      >\r\n        Contacts\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Styles.module.scss';\r\n\r\nexport default function AuthNav() {\r\n  return (\r\n    <div>\r\n      <NavLink\r\n        to=\"/register\"\r\n        exact\r\n        className={s.link}\r\n        activeClassName={s.activeLink}\r\n      >\r\n        Registration\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        to=\"/login\"\r\n        exact\r\n        className={s.link}\r\n        activeClassName={s.activeLink}\r\n      >\r\n        Log In\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../redux/auth';\r\nimport s from './Styles.module.scss';\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(authSelectors.getUsername);\r\n\r\n  return (\r\n    <div className={s.user_container}>\r\n      <span className={s.user_name}>Welcome, {name}</span>\r\n      <button type=\"button\" onClick={() => dispatch(authOperations.logOut())}>\r\n        Log Out\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\nimport Navigation from './Navigation';\r\nimport AuthNav from './AuthNav';\r\nimport UserMenu from './UserMenu';\r\nimport s from './Styles.module.scss';\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <header className={s.section}>\r\n      <Navigation />\r\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n      <h2 className={s.title}>Navigation</h2>\r\n    </header>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport s from './views.module.scss';\r\n\r\nconst HomeView = () => (\r\n  <div>\r\n    <h1 className={s.title}>Welcome to our phonebook service</h1>\r\n  </div>\r\n);\r\n\r\nexport default HomeView;\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { authOperations } from '../redux/auth';\r\nimport s from './views.module.scss';\r\n\r\nexport default function RegisterView() {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case 'name':\r\n        return setName(value);\r\n      case 'email':\r\n        return setEmail(value);\r\n      case 'password':\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(authOperations.register({ name, email, password }));\r\n    setName('');\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Registration page</h1>\r\n\r\n      <form onSubmit={handleSubmit} className={s.user_form} autoComplete=\"off\">\r\n        <label className={s.user_label}>\r\n          Name\r\n          <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\r\n        </label>\r\n        <label className={s.user_label}>\r\n          Email\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label className={s.user_label}>\r\n          Password\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { authOperations } from '../redux/auth';\r\nimport s from './views.module.scss';\r\n\r\nexport default function LoginView() {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case 'email':\r\n        return setEmail(value);\r\n      case 'password':\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(authOperations.logIn({ email, password }));\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Login page</h1>\r\n\r\n      <form onSubmit={handleSubmit} className={s.user_form} autoComplete=\"off\">\r\n        <lable style={s.user_label}>\r\n          Email\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n          />\r\n        </lable>\r\n\r\n        <lable className={s.user_label}>\r\n          Password\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n          />\r\n        </lable>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactOperations from '../redux/contacts/contacts-operations';\nimport { getAllContacts } from '../redux/contacts/contacts-selectors';\nimport s from './Styles.module.scss';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const items = useSelector(getAllContacts);\n  const dispatch = useDispatch();\n  const contactId = uuidv4();\n  const phoneId = uuidv4();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'phone':\n        setPhone(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const repeatName = name =>\n      items.find(contact => contact.name.toLowerCase() === name.toLowerCase());\n\n    if (repeatName(name)) {\n      alert(`${name} is already in contacts`);\n    } else {\n      dispatch(ContactOperations.addNewContact({ name, phone }));\n    }\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className={s.contact_form}>\n        <label htmlFor={contactId} className={s.formLabel}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            className={s.inputWindow}\n            value={name}\n            onChange={handleChange}\n            id={contactId}\n          />\n        </label>\n        <label htmlFor={phoneId} className={s.contact_formLabel}>\n          Phone\n          <input\n            type=\"tel\"\n            name=\"phone\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            className={s.inputWindow}\n            value={phone}\n            onChange={handleChange}\n            id={phoneId}\n          />\n        </label>\n        <button type=\"submit\" title=\"Добавить контакт\" className={s.btn}>\n          Add contact\n        </button>\n      </div>\n    </form>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { contactsSelectors, changeFilter } from '../redux/contacts';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './Styles.module.scss';\n\nconst filterId = uuidv4();\n\nexport default function Filter() {\n  const value = useSelector(contactsSelectors.getFilter);\n  const dispatch = useDispatch();\n  return (\n    <div className={s.filterBox}>\n      <label htmlFor={filterId} className={s.filterLabel}>\n        <input\n          type=\"text\"\n          className={s.filterInput}\n          id={filterId}\n          placeholder=\"Find contacts by name\"\n          value={value}\n          onChange={e => dispatch(changeFilter(e.target.value))}\n        ></input>\n      </label>\n    </div>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from '../redux/contacts';\nimport s from './Styles.module.scss';\nimport { useEffect } from 'react';\n\nexport default function ContactList() {\n  const contacts = useSelector(contactsSelectors.getVisibleContacts);\n  const dispatch = useDispatch();\n  const isLoading = useSelector(contactsSelectors.getLoading);\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoading && <h1>Loading...</h1>}\n      {contacts.length > 0 && (\n        <ul className={s.contactList}>\n          {contacts.map(({ id, name, phone }) => (\n            <li key={id} className={s.listItem}>\n              <p>\n                {name}: {phone}\n              </p>\n              <button\n                type=\"button\"\n                onClick={() => dispatch(contactsOperations.deleteContact(id))}\n                className={s.btn}\n                title=\"Удалить контакт\"\n              >\n                Delete\n              </button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n","import s from './views.module.scss';\nimport ContactForm from '../components/ContactForm';\nimport Filter from '../components/Filter';\nimport ContactList from '../components/ContactList ';\n\nexport default function App() {\n  return (\n    <div className={s.section}>\n      <h2 className={s.title}>Phonebook</h2>\n      <ContactForm />\n      <h2 className={s.title}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","// import { useEffect } from 'react';\r\n// import { useDispatch } from 'react-redux';\r\nimport { Switch, Route } from 'react-router';\r\nimport Container from './components/Container';\r\nimport AppBar from './components/AppBar';\r\nimport HomeView from './views/HomeView';\r\nimport RegisterView from './views/RegisterView';\r\nimport LoginView from './views/LoginView';\r\nimport ContactsView from './views/ContactsView';\r\n\r\nexport default function App() {\r\n  //   const dispatch = useDispatch();\r\n\r\n  //   useEffect(() => {\r\n  //     dispatch(authOperations.fetchCurrentUser());\r\n  //   }, [dispatch]);\r\n\r\n  return (\r\n    <Container>\r\n      <AppBar />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={HomeView} />\r\n        <Route path=\"/register\" component={RegisterView} />\r\n        <Route path=\"/login\" component={LoginView} />\r\n        <Route path=\"/contacts\" component={ContactsView} />\r\n      </Switch>\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}